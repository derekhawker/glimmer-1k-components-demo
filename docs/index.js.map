{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/surplus/es/insert.js","webpack:///./node_modules/surplus/es/content.js","webpack:///./node_modules/surplus/es/dom.js","webpack:///./node_modules/surplus/es/fieldData.js","webpack:///./node_modules/surplus/es/spread.js","webpack:///./node_modules/s-js/dist/es/S.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/colors.js","webpack:///./node_modules/d3-scale/src/category10.js","webpack:///./node_modules/d3-scale/src/category20b.js","webpack:///./node_modules/d3-scale/src/category20c.js","webpack:///./node_modules/d3-scale/src/category20.js","webpack:///./node_modules/d3-scale/src/cubehelix.js","webpack:///./node_modules/d3-scale/src/rainbow.js","webpack:///./node_modules/d3-scale/src/viridis.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/surplus-mixin-data/index.es.js","webpack:///./src/index.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TEXT_NODE","insert","range","parent","start","parentNode","test","good","toString","nodeType","data","document","createTextNode","replaceChild","end","Node","Array","isArray","insertArray","array","len","length","nextSibling","insertBefore","appendChild","undefined","previousSibling","removeChild","Function","S","firstChild","lastChild","textContent","content","current","clear","Error","normalizeIncomingArray","normalized","item","push","appendNodes","reconcileArrays","NOMATCH","NOINSERT","RECONCILE_ARRAY_BATCH","RECONCILE_ARRAY_BITS","RECONCILE_ARRAY_INC","RECONCILE_ARRAY_MASK","us","j","k","ulen","nmin","nmax","umin","umax","u","nx","ux","ul","loop","fixes","equable","insertOrAppend","ntext","__surplus_order","writable","Text","src","utext","preserved","lcs","seq","is","pre","findGreatestIndexLEQ","longestPositiveIncreasingSubsequence","utexti","lcsj","ntextk","node","marker","lo","hi","mid","Math","floor","svgNS","createElement","tag","className","el","createSvgElement","createElementNS","setAttribute","createComment","text","comment","removeAttribute","setAttributeNS","namespace","removeAttributeNS","htmlFieldCache","style","ref","fn","class","for","accept-charset","http-equiv","onDoubleClick","spellCheck","allowFullScreen","autoCapitalize","autoFocus","autoPlay","role","svgFieldCache","htmlFor","tabIndex","allowReorder","attributeName","attributeType","autoReverse","baseFrequency","calcMode","clipPathUnits","contentScriptType","contentStyleType","diffuseConstant","edgeMode","externalResourcesRequired","filterRes","filterUnits","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan","attributeOnlyRx","deepAttrRx","propOnlyRx","propPartRx","jsxEventPropRx","attrPartRx","deepPropRx","attrNamespaces","xlink","xml","attrNamespaceRx","RegExp","keys","join","getFieldData","field","svg","cache","cached","attr","isPropOnlyField","isAttrOnlyField","replace","toLowerCase","getAttrName","prop","toUpperCase","getPropName","exec","buildAttrData","substr","buildPropData","spread_assign","a","b","props","spread","obj","setField","_a","type","__webpack_exports__","owner","Owner","running","RunningNode","console","warn","ComputationNode","RunningClock","RootClock","changes","reset","updates","count","time","run","toplevelComputation","UNOWNED","owned","age","state","RUNNING","updateNode","to","log","Log","logRead","logComputationRead","root","result","disposer","disposes","add","dispose","topLevelRoot","on","ev","seed","onchanges","ss","callAll","DataNode","arguments","pending","NOTPENDING","event","logDataRead","eq","update","freeze","sample","cleanup","cleanups","Clock","this","Queue","CURRENT","source1","source1slot","sources","sourceslots","node1","node1slot","nodes","nodeslots","items","STALE","from","fromslot","toslot","clock","applyDataChange","markComputationsStale","markNodeStale","markOwnedNodesForDisposal","child","final","cleanupSource","pop","source","slot","last","lastslot","ascending","NaN","bisector","compare","f","x","ascendingComparator","left","right","ascendingBisect","bisectRight","bisect","number","array_array","src_range","slice","map","stop","step","max","ceil","e10","sqrt","e5","e2","ticks","reverse","tickIncrement","isFinite","power","LN10","error","pow","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","Map","map_map","each","set","constructor","has","remove","entries","size","empty","src_map","Set","proto","src_array_array","array_map","array_slice","implicit","ordinal","index","domain","unknown","scale","_","copy","band","bandwidth","ordinalRange","round","paddingInner","paddingOuter","align","rescale","rangeRound","padding","min","point","pointish","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","trim","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","rgbSpline","spline","colors","src_number","reA","reB","cssNode","cssRoot","cssView","svgNode","src_value","src_rgb","am","bm","bs","bi","lastIndex","q","one","string_zero","Date","setTime","nb","na","valueOf","src_round","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","split","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","target","interpolate","clamp","continuous","piecewise","output","input","deinterpolateClamp","invert","reinterpolateClamp","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","match","fill","sign","symbol","zero","width","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","src_identity","prefixes","src_locale","locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","defaultLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","identity_identity","interval","x0","x1","log_deinterpolate","log_reinterpolate","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","v","raise","quantile_quantile","thresholds","invertExtent","sort","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","date","offset","previous","filter","every","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","src_hour","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcYear","setUTCFullYear","src_utcYear","localDate","H","M","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad","string","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","src_utcDay","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","I","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_minute","src_second","utcTime","src_colors","category10","category20b","category20c","category20","d3_scale_src_cubehelix","warm","cool","rainbow","src_rainbow","ts","ramp","magma","inferno","plasma","sequential","interpolator","signal","arg1","arg2","off","HTMLInputElement","checkboxListener","checked","surplus__WEBPACK_IMPORTED_MODULE_0__","addEventListener","removeEventListener","checkboxData","radioListener","radioData","valueData","HTMLSelectElement","HTMLTextAreaElement","isContentEditable","nodeName","textContentListener","cur","textContentData","valueListener","__assign","assign","Layout","d3_scale_1","s_js_1","Surplus","surplus_mixin_data_1","LAYOUT_ORDER","PHYLLOTAXIS","SPIRAL","GRID","WAVE","theta","project","vector","wh","window","innerHeight","ww","innerWidth","translation","magnitude","lerp","startProp","endProp","px","xForLayout","layout","yForLayout","view","default","numPoints","__range","numSteps","phyllotaxis","th","genPhyllotaxis","grid","rowLength","genGrid","wave","xScale","genWave","spiral","genSpiral","points","newPoints","findAnchors","interpolateViridis","gx","gy","_b","wx","wy","_c","sx","sy","_d","py","makePoints","next","pct","currentLayout","nextLayout","pxProp","nxProp","pyProp","nyProp","forEach","pt","newPoint","requestAnimationFrame","__current","__g1","Visualization","__state","__div2_input2","__div2_insert3","getElementById"],"mappings":"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","file":"./index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { S } from './index';\nvar DOCUMENT_FRAGMENT_NODE = 11, TEXT_NODE = 3;\nexport function insert(range, value) {\n    var parent = range.start.parentNode, test = range.start, good = null, t = typeof value;\n    //if (parent === null) {\n    //    throw new Error(\"Surplus.insert() can only be used on a node that has a parent node. \\n\"\n    //        + \"Node ``\" + range.start + \"'' is currently unattached to a parent.\");\n    //}\n    //if (range.end.parentNode !== parent) {\n    //    throw new Error(\"Surplus.insert() requires that the inserted nodes remain sibilings \\n\"\n    //        + \"of the original node.  The DOM has been modified such that this is \\n\"\n    //        + \"no longer the case.\");\n    //}\n    if (t === 'string' || t === 'number') {\n        value = value.toString();\n        if (test.nodeType === TEXT_NODE) {\n            test.data = value;\n            good = test;\n        }\n        else {\n            value = document.createTextNode(value);\n            parent.replaceChild(value, test);\n            if (range.end === test)\n                range.end = value;\n            range.start = good = value;\n        }\n    }\n    else if (value instanceof Node) {\n        if (test !== value) {\n            parent.replaceChild(value, test);\n            if (range.end === test)\n                range.end = value;\n            range.start = value;\n        }\n        good = value;\n    }\n    else if (Array.isArray(value)) {\n        insertArray(value);\n    }\n    else if (value instanceof Function) {\n        S(function () {\n            insert(range, value());\n        });\n        good = range.end;\n    }\n    else if (value !== null && value !== undefined && value !== true && value !== false) {\n        value = value.toString();\n        if (test.nodeType === TEXT_NODE) {\n            test.data = value;\n            good = test;\n        }\n        else {\n            value = document.createTextNode(value);\n            parent.replaceChild(value, test);\n            if (range.end === test)\n                range.end = value;\n            range.start = good = value;\n        }\n    }\n    if (good === null) {\n        if (range.start === parent.firstChild && range.end === parent.lastChild && range.start !== range.end) {\n            // fast delete entire contents\n            parent.textContent = \"\";\n            value = document.createTextNode(\"\");\n            parent.appendChild(value);\n            good = range.start = range.end = value;\n        }\n        else if (test.nodeType === TEXT_NODE) {\n            test.data = \"\";\n            good = test;\n        }\n        else {\n            value = document.createTextNode(\"\");\n            parent.replaceChild(value, test);\n            if (range.end === test)\n                range.end = value;\n            range.start = good = value;\n        }\n    }\n    // remove anything left after the good cursor from the insert range\n    while (good !== range.end) {\n        test = range.end;\n        range.end = test.previousSibling;\n        parent.removeChild(test);\n    }\n    return range;\n    function insertArray(array) {\n        for (var i = 0, len = array.length; i < len; i++) {\n            var value = array[i];\n            if (good === range.end) {\n                if (value instanceof Node) {\n                    good = range.end = (good.nextSibling ? parent.insertBefore(value, good.nextSibling) : parent.appendChild(value));\n                }\n                else if (value instanceof Array) {\n                    insertArray(value);\n                }\n                else if (value !== null && value !== undefined && value !== false && value !== true) {\n                    value = document.createTextNode(value.toString());\n                    good = range.end = (good.nextSibling ? parent.insertBefore(value, good.nextSibling) : parent.appendChild(value));\n                }\n            }\n            else {\n                if (value instanceof Node) {\n                    if (test !== value) {\n                        if (good === null) {\n                            if (range.end === value)\n                                range.end = value.previousSibling;\n                            parent.replaceChild(value, test);\n                            range.start = value;\n                            if (range.end === test)\n                                range.end = value;\n                            test = value.nextSibling;\n                        }\n                        else {\n                            if (test.nextSibling === value && test !== value.nextSibling && test !== range.end) {\n                                parent.removeChild(test);\n                                test = value.nextSibling;\n                            }\n                            else {\n                                if (range.end === value)\n                                    range.end = value.previousSibling;\n                                parent.insertBefore(value, test);\n                            }\n                        }\n                    }\n                    else {\n                        test = test.nextSibling;\n                    }\n                    good = value;\n                }\n                else if (value instanceof Array) {\n                    insertArray(value);\n                }\n                else if (value !== null && value !== undefined && value !== true && value !== false) {\n                    value = value.toString();\n                    if (test.nodeType === TEXT_NODE) {\n                        test.data = value;\n                        if (good === null)\n                            range.start = test;\n                        good = test, test = good.nextSibling;\n                    }\n                    else {\n                        value = document.createTextNode(value);\n                        parent.insertBefore(value, test);\n                        if (good === null)\n                            range.start = value;\n                        good = value;\n                    }\n                }\n            }\n        }\n    }\n}\n","import { S } from './index';\nexport function content(parent, value, current) {\n    var t = typeof value;\n    if (current === value) {\n        // nothing to do\n    }\n    else if (t === 'string') {\n        // if a Text node already exists, it's faster to set its .data than set the parent.textContent\n        if (current !== \"\" && typeof current === 'string') {\n            current = parent.firstChild.data = value;\n        }\n        else {\n            current = parent.textContent = value;\n        }\n    }\n    else if (t === 'number') {\n        value = value.toString();\n        if (current !== \"\" && typeof current === 'string') {\n            current = parent.firstChild.data = value;\n        }\n        else {\n            current = parent.textContent = value;\n        }\n    }\n    else if (value == null || t === 'boolean') {\n        clear(parent);\n        current = \"\";\n    }\n    else if (t === 'function') {\n        S(function () {\n            current = content(parent, value(), current);\n        });\n    }\n    else if (value instanceof Node) {\n        if (Array.isArray(current)) {\n            if (current.length === 0) {\n                parent.appendChild(value);\n            }\n            else if (current.length === 1) {\n                parent.replaceChild(value, current[0]);\n            }\n            else {\n                clear(parent);\n                parent.appendChild(value);\n            }\n        }\n        else if (current === \"\") {\n            parent.appendChild(value);\n        }\n        else {\n            parent.replaceChild(value, parent.firstChild);\n        }\n        current = value;\n    }\n    else if (Array.isArray(value)) {\n        var array = normalizeIncomingArray([], value);\n        if (array.length === 0) {\n            clear(parent);\n        }\n        else {\n            if (Array.isArray(current)) {\n                if (current.length === 0) {\n                    appendNodes(parent, array, 0, array.length);\n                }\n                else {\n                    reconcileArrays(parent, current, array);\n                }\n            }\n            else if (current === \"\") {\n                appendNodes(parent, array, 0, array.length);\n            }\n            else {\n                reconcileArrays(parent, [parent.firstChild], array);\n            }\n        }\n        current = array;\n    }\n    else {\n        throw new Error(\"content must be Node, stringable, or array of same\");\n    }\n    return current;\n}\nvar NOMATCH = -1, NOINSERT = -2;\nvar RECONCILE_ARRAY_BATCH = 0;\nvar RECONCILE_ARRAY_BITS = 16, RECONCILE_ARRAY_INC = 1 << RECONCILE_ARRAY_BITS, RECONCILE_ARRAY_MASK = RECONCILE_ARRAY_INC - 1;\n// reconcile the content of parent from ns to us\n// see ivi's excellent writeup of diffing arrays in a vdom library: \n// https://github.com/ivijs/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1187\n// this code isn't identical, since we're diffing real dom nodes to nodes-or-strings, \n// but the core methodology of trimming ends and reversals, matching nodes, then using\n// the longest increasing subsequence to minimize DOM ops is inspired by ivi.\nfunction reconcileArrays(parent, ns, us) {\n    var ulen = us.length, \n    // n = nodes, u = updates\n    // ranges defined by min and max indices\n    nmin = 0, nmax = ns.length - 1, umin = 0, umax = ulen - 1, \n    // start nodes of ranges\n    n = ns[nmin], u = us[umin], \n    // end nodes of ranges\n    nx = ns[nmax], ux = us[umax], \n    // node, if any, just after ux, used for doing .insertBefore() to put nodes at end\n    ul = nx.nextSibling, i, j, k, loop = true;\n    // scan over common prefixes, suffixes, and simple reversals\n    fixes: while (loop) {\n        loop = false;\n        // common prefix, u === n\n        while (equable(u, n, umin, us)) {\n            umin++;\n            nmin++;\n            if (umin > umax || nmin > nmax)\n                break fixes;\n            u = us[umin];\n            n = ns[nmin];\n        }\n        // common suffix, ux === nx\n        while (equable(ux, nx, umax, us)) {\n            ul = nx;\n            umax--;\n            nmax--;\n            if (umin > umax || nmin > nmax)\n                break fixes;\n            ux = us[umax];\n            nx = ns[nmax];\n        }\n        // reversal u === nx, have to swap node forward\n        while (equable(u, nx, umin, us)) {\n            loop = true;\n            parent.insertBefore(nx, n);\n            umin++;\n            nmax--;\n            if (umin > umax || nmin > nmax)\n                break fixes;\n            u = us[umin];\n            nx = ns[nmax];\n        }\n        // reversal ux === n, have to swap node back\n        while (equable(ux, n, umax, us)) {\n            loop = true;\n            if (ul === null)\n                parent.appendChild(n);\n            else\n                parent.insertBefore(n, ul);\n            ul = n;\n            umax--;\n            nmin++;\n            if (umin > umax || nmin > nmax)\n                break fixes;\n            ux = us[umax];\n            n = ns[nmin];\n        }\n    }\n    // if that covered all updates, just need to remove any remaining nodes and we're done\n    if (umin > umax) {\n        // remove any remaining nodes\n        while (nmin <= nmax) {\n            parent.removeChild(ns[nmax]);\n            nmax--;\n        }\n        return;\n    }\n    // if that covered all current nodes, just need to insert any remaining updates and we're done\n    if (nmin > nmax) {\n        // insert any remaining nodes\n        while (umin <= umax) {\n            insertOrAppend(parent, us[umin], ul, umin, us);\n            umin++;\n        }\n        return;\n    }\n    // simple cases don't apply, have to actually match up nodes and figure out minimum DOM ops\n    // loop through nodes and mark them with a special property indicating their order\n    // we'll then go through the updates and look for those properties\n    // in case any of the updates have order properties left over from earlier runs, we \n    // use the low bits of the order prop to record a batch identifier.\n    // I'd much rather use a Map than a special property, but Maps of objects are really\n    // slow currently, like only 100k get/set ops / second\n    // for Text nodes, all that matters is their order, as they're easily, interchangeable\n    // so we record their positions in ntext[]\n    var ntext = [];\n    // update global batch identifer\n    RECONCILE_ARRAY_BATCH = (RECONCILE_ARRAY_BATCH + 1) % RECONCILE_ARRAY_INC;\n    for (i = nmin, j = (nmin << RECONCILE_ARRAY_BITS) + RECONCILE_ARRAY_BATCH; i <= nmax; i++, j += RECONCILE_ARRAY_INC) {\n        n = ns[i];\n        // add or update special order property\n        if (n.__surplus_order === undefined) {\n            Object.defineProperty(n, '__surplus_order', { value: j, writable: true });\n        }\n        else {\n            n.__surplus_order = j;\n        }\n        if (n instanceof Text) {\n            ntext.push(i);\n        }\n    }\n    // now loop through us, looking for the order property, otherwise recording NOMATCH\n    var src = new Array(umax - umin + 1), utext = [], preserved = 0;\n    for (i = umin; i <= umax; i++) {\n        u = us[i];\n        if (typeof u === 'string') {\n            utext.push(i);\n            src[i - umin] = NOMATCH;\n        }\n        else if ((j = u.__surplus_order) !== undefined && (j & RECONCILE_ARRAY_MASK) === RECONCILE_ARRAY_BATCH) {\n            j >>= RECONCILE_ARRAY_BITS;\n            src[i - umin] = j;\n            ns[j] = null;\n            preserved++;\n        }\n        else {\n            src[i - umin] = NOMATCH;\n        }\n    }\n    if (preserved === 0 && nmin === 0 && nmax === ns.length - 1) {\n        // no nodes preserved, use fast clear and append\n        clear(parent);\n        while (umin <= umax) {\n            insertOrAppend(parent, us[umin], null, umin, us);\n            umin++;\n        }\n        return;\n    }\n    // find longest common sequence between ns and us, represented as the indices \n    // of the longest increasing subsequence in src\n    var lcs = longestPositiveIncreasingSubsequence(src);\n    // we know we can preserve their order, so march them as NOINSERT\n    for (i = 0; i < lcs.length; i++) {\n        src[lcs[i]] = NOINSERT;\n    }\n    /*\n              0   1   2   3   4   5   6   7\n    ns    = [ n,  n,  t,  n,  n,  n,  t,  n ]\n                  |          /   /       /\n                  |        /   /       /\n                  +------/---/-------/----+\n                       /   /       /      |\n    us    = [ n,  s,  n,  n,  s,  n,  s,  n ]\n    src   = [-1, -1,  4,  5, -1,  7, -1,  1 ]\n    lis   = [         2,  3,      5]\n                      j\n    utext = [     1,          4,      6 ]\n                  i\n    ntext = [         2,              6 ]\n                      k\n    */\n    // replace strings in us with Text nodes, reusing Text nodes from ns when we can do so without moving them\n    var utexti = 0, lcsj = 0, ntextk = 0;\n    for (i = 0, j = 0, k = 0; i < utext.length; i++) {\n        utexti = utext[i];\n        // need to answer qeustion \"if utext[i] falls between two lcs nodes, is there an ntext between them which we can reuse?\"\n        // first, find j such that lcs[j] is the first lcs node *after* utext[i]\n        while (j < lcs.length && (lcsj = lcs[j]) < utexti - umin)\n            j++;\n        // now, find k such that ntext[k] is the first ntext *after* lcs[j-1] (or after start, if j === 0)\n        while (k < ntext.length && (ntextk = ntext[k], j !== 0) && ntextk < src[lcs[j - 1]])\n            k++;\n        // if ntext[k] < lcs[j], then we know ntext[k] falls between lcs[j-1] (or start) and lcs[j] (or end)\n        // that means we can re-use it without moving it\n        if (k < ntext.length && (j === lcs.length || ntextk < src[lcsj])) {\n            n = ns[ntextk];\n            u = us[utexti];\n            if (n.data !== u)\n                n.data = u;\n            ns[ntextk] = null;\n            us[utexti] = n;\n            src[utexti] = NOINSERT;\n            k++;\n        }\n        else {\n            // if we didn't find one to re-use, make a new Text node\n            us[utexti] = document.createTextNode(us[utexti]);\n        }\n    }\n    // remove stale nodes in ns\n    while (nmin <= nmax) {\n        n = ns[nmin];\n        if (n !== null) {\n            parent.removeChild(n);\n        }\n        nmin++;\n    }\n    // insert new nodes\n    while (umin <= umax) {\n        ux = us[umax];\n        if (src[umax - umin] !== NOINSERT) {\n            if (ul === null)\n                parent.appendChild(ux);\n            else\n                parent.insertBefore(ux, ul);\n        }\n        ul = ux;\n        umax--;\n    }\n}\n// two nodes are \"equable\" if they are identical (===) or if we can make them the same, i.e. they're \n// Text nodes, which we can reuse with the new text\nfunction equable(u, n, i, us) {\n    if (u === n) {\n        return true;\n    }\n    else if (typeof u === 'string' && n instanceof Text) {\n        if (n.data !== u)\n            n.data = u;\n        us[i] = n;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction appendNodes(parent, array, i, end) {\n    var node;\n    for (; i < end; i++) {\n        node = array[i];\n        if (node instanceof Node) {\n            parent.appendChild(node);\n        }\n        else {\n            node = array[i] = document.createTextNode(node);\n            parent.appendChild(node);\n        }\n    }\n}\nfunction insertOrAppend(parent, node, marker, i, us) {\n    if (typeof node === 'string') {\n        node = us[i] = document.createTextNode(node);\n    }\n    if (marker === null)\n        parent.appendChild(node);\n    else\n        parent.insertBefore(node, marker);\n}\nfunction normalizeIncomingArray(normalized, array) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        var item = array[i];\n        if (item instanceof Node) {\n            normalized.push(item);\n        }\n        else if (item == null || item === true || item === false) {\n            // skip\n        }\n        else if (Array.isArray(item)) {\n            normalizeIncomingArray(normalized, item);\n        }\n        else if (typeof item === 'string') {\n            normalized.push(item);\n        }\n        else {\n            normalized.push(item.toString());\n        }\n    }\n    return normalized;\n}\nfunction clear(node) {\n    node.textContent = \"\";\n}\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns) {\n    var seq = [], is = [], l = -1, pre = new Array(ns.length);\n    for (var i = 0, len = ns.length; i < len; i++) {\n        var n = ns[i];\n        if (n < 0)\n            continue;\n        var j = findGreatestIndexLEQ(seq, n);\n        if (j !== -1)\n            pre[i] = is[j];\n        if (j === l) {\n            l++;\n            seq[l] = n;\n            is[l] = i;\n        }\n        else if (n < seq[j + 1]) {\n            seq[j + 1] = n;\n            is[j + 1] = i;\n        }\n    }\n    for (i = is[l]; l >= 0; i = pre[i], l--) {\n        seq[l] = i;\n    }\n    return seq;\n}\nfunction findGreatestIndexLEQ(seq, n) {\n    // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n    // therefore, they actually start out of range: (-1, last + 1)\n    var lo = -1, hi = seq.length;\n    // fast path for simple increasing sequences\n    if (hi > 0 && seq[hi - 1] <= n)\n        return hi - 1;\n    while (hi - lo > 1) {\n        var mid = Math.floor((lo + hi) / 2);\n        if (seq[mid] > n) {\n            hi = mid;\n        }\n        else {\n            lo = mid;\n        }\n    }\n    return lo;\n}\n","var svgNS = \"http://www.w3.org/2000/svg\";\nexport function createElement(tag, className, parent) {\n    var el = document.createElement(tag);\n    if (className)\n        el.className = className;\n    if (parent)\n        parent.appendChild(el);\n    return el;\n}\nexport function createSvgElement(tag, className, parent) {\n    var el = document.createElementNS(svgNS, tag);\n    if (className)\n        el.setAttribute(\"class\", className);\n    if (parent)\n        parent.appendChild(el);\n    return el;\n}\nexport function createComment(text, parent) {\n    var comment = document.createComment(text);\n    parent.appendChild(comment);\n    return comment;\n}\nexport function createTextNode(text, parent) {\n    var node = document.createTextNode(text);\n    parent.appendChild(node);\n    return node;\n}\nexport function setAttribute(node, name, value) {\n    if (value === false || value === null || value === undefined)\n        node.removeAttribute(name);\n    else\n        node.setAttribute(name, value);\n}\nexport function setAttributeNS(node, namespace, name, value) {\n    if (value === false || value === null || value === undefined)\n        node.removeAttributeNS(namespace, name);\n    else\n        node.setAttributeNS(namespace, name, value);\n}\n","var \n// pre-seed the caches with a few special cases, so we don't need to check for them in the common cases\nhtmlFieldCache = {\n    // special props\n    style: ['style', null, 3 /* Assign */],\n    ref: ['ref', null, 2 /* Ignore */],\n    fn: ['fn', null, 2 /* Ignore */],\n    // attr compat\n    class: ['className', null, 0 /* Property */],\n    for: ['htmlFor', null, 0 /* Property */],\n    \"accept-charset\": ['acceptCharset', null, 0 /* Property */],\n    \"http-equiv\": ['httpEquiv', null, 0 /* Property */],\n    // a few React oddities, mostly disagreeing about casing\n    onDoubleClick: ['ondblclick', null, 0 /* Property */],\n    spellCheck: ['spellcheck', null, 0 /* Property */],\n    allowFullScreen: ['allowFullscreen', null, 0 /* Property */],\n    autoCapitalize: ['autocapitalize', null, 0 /* Property */],\n    autoFocus: ['autofocus', null, 0 /* Property */],\n    autoPlay: ['autoplay', null, 0 /* Property */],\n    // other\n    // role is part of the ARIA spec but not caught by the aria- attr filter\n    role: ['role', null, 1 /* Attribute */]\n}, svgFieldCache = {\n    // special props\n    style: ['style', null, 3 /* Assign */],\n    ref: ['ref', null, 2 /* Ignore */],\n    fn: ['fn', null, 2 /* Ignore */],\n    // property compat\n    className: ['class', null, 1 /* Attribute */],\n    htmlFor: ['for', null, 1 /* Attribute */],\n    tabIndex: ['tabindex', null, 1 /* Attribute */],\n    // React compat\n    onDoubleClick: ['ondblclick', null, 0 /* Property */],\n    // attributes with eccentric casing - some SVG attrs are snake-cased, some camelCased\n    allowReorder: ['allowReorder', null, 1 /* Attribute */],\n    attributeName: ['attributeName', null, 1 /* Attribute */],\n    attributeType: ['attributeType', null, 1 /* Attribute */],\n    autoReverse: ['autoReverse', null, 1 /* Attribute */],\n    baseFrequency: ['baseFrequency', null, 1 /* Attribute */],\n    calcMode: ['calcMode', null, 1 /* Attribute */],\n    clipPathUnits: ['clipPathUnits', null, 1 /* Attribute */],\n    contentScriptType: ['contentScriptType', null, 1 /* Attribute */],\n    contentStyleType: ['contentStyleType', null, 1 /* Attribute */],\n    diffuseConstant: ['diffuseConstant', null, 1 /* Attribute */],\n    edgeMode: ['edgeMode', null, 1 /* Attribute */],\n    externalResourcesRequired: ['externalResourcesRequired', null, 1 /* Attribute */],\n    filterRes: ['filterRes', null, 1 /* Attribute */],\n    filterUnits: ['filterUnits', null, 1 /* Attribute */],\n    gradientTransform: ['gradientTransform', null, 1 /* Attribute */],\n    gradientUnits: ['gradientUnits', null, 1 /* Attribute */],\n    kernelMatrix: ['kernelMatrix', null, 1 /* Attribute */],\n    kernelUnitLength: ['kernelUnitLength', null, 1 /* Attribute */],\n    keyPoints: ['keyPoints', null, 1 /* Attribute */],\n    keySplines: ['keySplines', null, 1 /* Attribute */],\n    keyTimes: ['keyTimes', null, 1 /* Attribute */],\n    lengthAdjust: ['lengthAdjust', null, 1 /* Attribute */],\n    limitingConeAngle: ['limitingConeAngle', null, 1 /* Attribute */],\n    markerHeight: ['markerHeight', null, 1 /* Attribute */],\n    markerUnits: ['markerUnits', null, 1 /* Attribute */],\n    maskContentUnits: ['maskContentUnits', null, 1 /* Attribute */],\n    maskUnits: ['maskUnits', null, 1 /* Attribute */],\n    numOctaves: ['numOctaves', null, 1 /* Attribute */],\n    pathLength: ['pathLength', null, 1 /* Attribute */],\n    patternContentUnits: ['patternContentUnits', null, 1 /* Attribute */],\n    patternTransform: ['patternTransform', null, 1 /* Attribute */],\n    patternUnits: ['patternUnits', null, 1 /* Attribute */],\n    pointsAtX: ['pointsAtX', null, 1 /* Attribute */],\n    pointsAtY: ['pointsAtY', null, 1 /* Attribute */],\n    pointsAtZ: ['pointsAtZ', null, 1 /* Attribute */],\n    preserveAlpha: ['preserveAlpha', null, 1 /* Attribute */],\n    preserveAspectRatio: ['preserveAspectRatio', null, 1 /* Attribute */],\n    primitiveUnits: ['primitiveUnits', null, 1 /* Attribute */],\n    refX: ['refX', null, 1 /* Attribute */],\n    refY: ['refY', null, 1 /* Attribute */],\n    repeatCount: ['repeatCount', null, 1 /* Attribute */],\n    repeatDur: ['repeatDur', null, 1 /* Attribute */],\n    requiredExtensions: ['requiredExtensions', null, 1 /* Attribute */],\n    requiredFeatures: ['requiredFeatures', null, 1 /* Attribute */],\n    specularConstant: ['specularConstant', null, 1 /* Attribute */],\n    specularExponent: ['specularExponent', null, 1 /* Attribute */],\n    spreadMethod: ['spreadMethod', null, 1 /* Attribute */],\n    startOffset: ['startOffset', null, 1 /* Attribute */],\n    stdDeviation: ['stdDeviation', null, 1 /* Attribute */],\n    stitchTiles: ['stitchTiles', null, 1 /* Attribute */],\n    surfaceScale: ['surfaceScale', null, 1 /* Attribute */],\n    systemLanguage: ['systemLanguage', null, 1 /* Attribute */],\n    tableValues: ['tableValues', null, 1 /* Attribute */],\n    targetX: ['targetX', null, 1 /* Attribute */],\n    targetY: ['targetY', null, 1 /* Attribute */],\n    textLength: ['textLength', null, 1 /* Attribute */],\n    viewBox: ['viewBox', null, 1 /* Attribute */],\n    viewTarget: ['viewTarget', null, 1 /* Attribute */],\n    xChannelSelector: ['xChannelSelector', null, 1 /* Attribute */],\n    yChannelSelector: ['yChannelSelector', null, 1 /* Attribute */],\n    zoomAndPan: ['zoomAndPan', null, 1 /* Attribute */],\n};\nvar attributeOnlyRx = /-/, deepAttrRx = /^style-/, isAttrOnlyField = function (field) { return attributeOnlyRx.test(field) && !deepAttrRx.test(field); }, propOnlyRx = /^(on|style)/, isPropOnlyField = function (field) { return propOnlyRx.test(field); }, propPartRx = /[a-z][A-Z]/g, getAttrName = function (field) { return field.replace(propPartRx, function (m) { return m[0] + '-' + m[1]; }).toLowerCase(); }, jsxEventPropRx = /^on[A-Z]/, attrPartRx = /\\-(?:[a-z]|$)/g, getPropName = function (field) {\n    var prop = field.replace(attrPartRx, function (m) { return m.length === 1 ? '' : m[1].toUpperCase(); });\n    return jsxEventPropRx.test(prop) ? prop.toLowerCase() : prop;\n}, deepPropRx = /^(style)([A-Z])/, buildPropData = function (prop) {\n    var m = deepPropRx.exec(prop);\n    return m ? [m[2].toLowerCase() + prop.substr(m[0].length), m[1], 0 /* Property */] : [prop, null, 0 /* Property */];\n}, attrNamespaces = {\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n}, attrNamespaceRx = new RegExp(\"^(\" + Object.keys(attrNamespaces).join('|') + \")-(.*)\"), buildAttrData = function (attr) {\n    var m = attrNamespaceRx.exec(attr);\n    return m ? [m[2], attrNamespaces[m[1]], 1 /* Attribute */] : [attr, null, 1 /* Attribute */];\n};\nexport var getFieldData = function (field, svg) {\n    var cache = svg ? svgFieldCache : htmlFieldCache, cached = cache[field];\n    if (cached)\n        return cached;\n    var attr = svg && !isPropOnlyField(field)\n        || !svg && isAttrOnlyField(field), name = attr ? getAttrName(field) : getPropName(field);\n    if (name !== field && (cached = cache[name]))\n        return cached;\n    var data = attr ? buildAttrData(name) : buildPropData(name);\n    return cache[field] = data;\n};\n","import { setAttribute } from './dom';\nimport { getFieldData } from './fieldData';\nimport { setAttributeNS } from './index';\nexport function assign(a, b) {\n    var props = Object.keys(b);\n    for (var i = 0, len = props.length; i < len; i++) {\n        var name = props[i];\n        a[name] = b[name];\n    }\n}\nexport function spread(node, obj, svg) {\n    var props = Object.keys(obj);\n    for (var i = 0, len = props.length; i < len; i++) {\n        var name = props[i];\n        setField(node, name, obj[name], svg);\n    }\n}\nfunction setField(node, field, value, svg) {\n    var _a = getFieldData(field, svg), name = _a[0], namespace = _a[1], flags = _a[2], type = flags & 3 /* Type */;\n    if (type === 0 /* Property */) {\n        if (namespace)\n            node = node[namespace];\n        node[name] = value;\n    }\n    else if (type === 1 /* Attribute */) {\n        if (namespace)\n            setAttributeNS(node, namespace, name, value);\n        else\n            setAttribute(node, name, value);\n    }\n    else if (type === 3 /* Assign */) {\n        if (value && typeof value === 'object')\n            assign(node.style, value);\n    }\n}\n","// Public interface\nvar S = function S(fn, value) {\n    var owner = Owner, running = RunningNode;\n    if (owner === null)\n        console.warn(\"computations created without a root or parent will never be disposed\");\n    var node = new ComputationNode(fn, value);\n    Owner = RunningNode = node;\n    if (RunningClock === null) {\n        toplevelComputation(node);\n    }\n    else {\n        node.value = node.fn(node.value);\n    }\n    if (owner && owner !== UNOWNED) {\n        if (owner.owned === null)\n            owner.owned = [node];\n        else\n            owner.owned.push(node);\n    }\n    Owner = owner;\n    RunningNode = running;\n    return function computation() {\n        if (RunningNode !== null) {\n            if (node.age === RootClock.time) {\n                if (node.state === RUNNING)\n                    throw new Error(\"circular dependency\");\n                else\n                    updateNode(node); // checks for state === STALE internally, so don't need to check here\n            }\n            logComputationRead(node, RunningNode);\n        }\n        return node.value;\n    };\n};\n// compatibility with commonjs systems that expect default export to be at require('s.js').default rather than just require('s-js')\nObject.defineProperty(S, 'default', { value: S });\nexport default S;\nS.root = function root(fn) {\n    var owner = Owner, root = fn.length === 0 ? UNOWNED : new ComputationNode(null, null), result = undefined, disposer = fn.length === 0 ? null : function _dispose() {\n        if (RunningClock !== null) {\n            RootClock.disposes.add(root);\n        }\n        else {\n            dispose(root);\n        }\n    };\n    Owner = root;\n    if (RunningClock === null) {\n        result = topLevelRoot(fn, disposer, owner);\n    }\n    else {\n        result = disposer === null ? fn() : fn(disposer);\n        Owner = owner;\n    }\n    return result;\n};\nfunction topLevelRoot(fn, disposer, owner) {\n    try {\n        return disposer === null ? fn() : fn(disposer);\n    }\n    finally {\n        Owner = owner;\n    }\n}\nS.on = function on(ev, fn, seed, onchanges) {\n    if (Array.isArray(ev))\n        ev = callAll(ev);\n    onchanges = !!onchanges;\n    return S(on, seed);\n    function on(value) {\n        var running = RunningNode;\n        ev();\n        if (onchanges)\n            onchanges = false;\n        else {\n            RunningNode = null;\n            value = fn(value);\n            RunningNode = running;\n        }\n        return value;\n    }\n};\nfunction callAll(ss) {\n    return function all() {\n        for (var i = 0; i < ss.length; i++)\n            ss[i]();\n    };\n}\nS.data = function data(value) {\n    var node = new DataNode(value);\n    return function data(value) {\n        if (arguments.length > 0) {\n            if (RunningClock !== null) {\n                if (node.pending !== NOTPENDING) {\n                    if (value !== node.pending) {\n                        throw new Error(\"conflicting changes: \" + value + \" !== \" + node.pending);\n                    }\n                }\n                else {\n                    node.pending = value;\n                    RootClock.changes.add(node);\n                }\n            }\n            else {\n                if (node.log !== null) {\n                    node.pending = value;\n                    RootClock.changes.add(node);\n                    event();\n                }\n                else {\n                    node.value = value;\n                }\n            }\n            return value;\n        }\n        else {\n            if (RunningNode !== null) {\n                logDataRead(node, RunningNode);\n            }\n            return node.value;\n        }\n    };\n};\nS.value = function value(current, eq) {\n    var data = S.data(current), age = -1;\n    return function value(update) {\n        if (arguments.length === 0) {\n            return data();\n        }\n        else {\n            var same = eq ? eq(current, update) : current === update;\n            if (!same) {\n                var time = RootClock.time;\n                if (age === time)\n                    throw new Error(\"conflicting values: \" + update + \" is not the same as \" + current);\n                age = time;\n                current = update;\n                data(update);\n            }\n            return update;\n        }\n    };\n};\nS.freeze = function freeze(fn) {\n    var result = undefined;\n    if (RunningClock !== null) {\n        result = fn();\n    }\n    else {\n        RunningClock = RootClock;\n        RunningClock.changes.reset();\n        try {\n            result = fn();\n            event();\n        }\n        finally {\n            RunningClock = null;\n        }\n    }\n    return result;\n};\nS.sample = function sample(fn) {\n    var result, running = RunningNode;\n    if (running !== null) {\n        RunningNode = null;\n        result = fn();\n        RunningNode = running;\n    }\n    else {\n        result = fn();\n    }\n    return result;\n};\nS.cleanup = function cleanup(fn) {\n    if (Owner !== null) {\n        if (Owner.cleanups === null)\n            Owner.cleanups = [fn];\n        else\n            Owner.cleanups.push(fn);\n    }\n    else {\n        console.warn(\"cleanups created without a root or parent will never be run\");\n    }\n};\n// Internal implementation\n/// Graph classes and operations\nvar Clock = /** @class */ (function () {\n    function Clock() {\n        this.time = 0;\n        this.changes = new Queue(); // batched changes to data nodes\n        this.updates = new Queue(); // computations to update\n        this.disposes = new Queue(); // disposals to run after current batch of updates finishes\n    }\n    return Clock;\n}());\nvar DataNode = /** @class */ (function () {\n    function DataNode(value) {\n        this.value = value;\n        this.pending = NOTPENDING;\n        this.log = null;\n    }\n    return DataNode;\n}());\nvar ComputationNode = /** @class */ (function () {\n    function ComputationNode(fn, value) {\n        this.fn = fn;\n        this.value = value;\n        this.state = CURRENT;\n        this.source1 = null;\n        this.source1slot = 0;\n        this.sources = null;\n        this.sourceslots = null;\n        this.log = null;\n        this.owned = null;\n        this.cleanups = null;\n        this.age = RootClock.time;\n    }\n    return ComputationNode;\n}());\nvar Log = /** @class */ (function () {\n    function Log() {\n        this.node1 = null;\n        this.node1slot = 0;\n        this.nodes = null;\n        this.nodeslots = null;\n    }\n    return Log;\n}());\nvar Queue = /** @class */ (function () {\n    function Queue() {\n        this.items = [];\n        this.count = 0;\n    }\n    Queue.prototype.reset = function () {\n        this.count = 0;\n    };\n    Queue.prototype.add = function (item) {\n        this.items[this.count++] = item;\n    };\n    Queue.prototype.run = function (fn) {\n        var items = this.items;\n        for (var i = 0; i < this.count; i++) {\n            fn(items[i]);\n            items[i] = null;\n        }\n        this.count = 0;\n    };\n    return Queue;\n}());\n// Constants\nvar NOTPENDING = {}, CURRENT = 0, STALE = 1, RUNNING = 2;\n// \"Globals\" used to keep track of current system state\nvar RootClock = new Clock(), RunningClock = null, // currently running clock \nRunningNode = null, // currently running computation\nOwner = null, // owner for new computations\nUNOWNED = new ComputationNode(null, null);\n// Functions\nfunction logRead(from, to) {\n    var fromslot, toslot = to.source1 === null ? -1 : to.sources === null ? 0 : to.sources.length;\n    if (from.node1 === null) {\n        from.node1 = to;\n        from.node1slot = toslot;\n        fromslot = -1;\n    }\n    else if (from.nodes === null) {\n        from.nodes = [to];\n        from.nodeslots = [toslot];\n        fromslot = 0;\n    }\n    else {\n        fromslot = from.nodes.length;\n        from.nodes.push(to);\n        from.nodeslots.push(toslot);\n    }\n    if (to.source1 === null) {\n        to.source1 = from;\n        to.source1slot = fromslot;\n    }\n    else if (to.sources === null) {\n        to.sources = [from];\n        to.sourceslots = [fromslot];\n    }\n    else {\n        to.sources.push(from);\n        to.sourceslots.push(fromslot);\n    }\n}\nfunction logDataRead(data, to) {\n    if (data.log === null)\n        data.log = new Log();\n    logRead(data.log, to);\n}\nfunction logComputationRead(node, to) {\n    if (node.log === null)\n        node.log = new Log();\n    logRead(node.log, to);\n}\nfunction event() {\n    // b/c we might be under a top level S.root(), have to preserve current root\n    var owner = Owner;\n    RootClock.updates.reset();\n    RootClock.time++;\n    try {\n        run(RootClock);\n    }\n    finally {\n        RunningClock = RunningNode = null;\n        Owner = owner;\n    }\n}\nfunction toplevelComputation(node) {\n    RunningClock = RootClock;\n    RootClock.changes.reset();\n    RootClock.updates.reset();\n    try {\n        node.value = node.fn(node.value);\n        if (RootClock.changes.count > 0 || RootClock.updates.count > 0) {\n            RootClock.time++;\n            run(RootClock);\n        }\n    }\n    finally {\n        RunningClock = Owner = RunningNode = null;\n    }\n}\nfunction run(clock) {\n    var running = RunningClock, count = 0;\n    RunningClock = clock;\n    clock.disposes.reset();\n    // for each batch ...\n    while (clock.changes.count !== 0 || clock.updates.count !== 0 || clock.disposes.count !== 0) {\n        if (count > 0)\n            clock.time++;\n        clock.changes.run(applyDataChange);\n        clock.updates.run(updateNode);\n        clock.disposes.run(dispose);\n        // if there are still changes after excessive batches, assume runaway            \n        if (count++ > 1e5) {\n            throw new Error(\"Runaway clock detected\");\n        }\n    }\n    RunningClock = running;\n}\nfunction applyDataChange(data) {\n    data.value = data.pending;\n    data.pending = NOTPENDING;\n    if (data.log)\n        markComputationsStale(data.log);\n}\nfunction markComputationsStale(log) {\n    var node1 = log.node1, nodes = log.nodes;\n    // mark all downstream nodes stale which haven't been already\n    if (node1 !== null)\n        markNodeStale(node1);\n    if (nodes !== null) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            markNodeStale(nodes[i]);\n        }\n    }\n}\nfunction markNodeStale(node) {\n    var time = RootClock.time;\n    if (node.age < time) {\n        node.age = time;\n        node.state = STALE;\n        RootClock.updates.add(node);\n        if (node.owned !== null)\n            markOwnedNodesForDisposal(node.owned);\n        if (node.log !== null)\n            markComputationsStale(node.log);\n    }\n}\nfunction markOwnedNodesForDisposal(owned) {\n    for (var i = 0; i < owned.length; i++) {\n        var child = owned[i];\n        child.age = RootClock.time;\n        child.state = CURRENT;\n        if (child.owned !== null)\n            markOwnedNodesForDisposal(child.owned);\n    }\n}\nfunction updateNode(node) {\n    if (node.state === STALE) {\n        var owner = Owner, running = RunningNode;\n        Owner = RunningNode = node;\n        node.state = RUNNING;\n        cleanup(node, false);\n        node.value = node.fn(node.value);\n        node.state = CURRENT;\n        Owner = owner;\n        RunningNode = running;\n    }\n}\nfunction cleanup(node, final) {\n    var source1 = node.source1, sources = node.sources, sourceslots = node.sourceslots, cleanups = node.cleanups, owned = node.owned, i, len;\n    if (cleanups !== null) {\n        for (i = 0; i < cleanups.length; i++) {\n            cleanups[i](final);\n        }\n        node.cleanups = null;\n    }\n    if (owned !== null) {\n        for (i = 0; i < owned.length; i++) {\n            dispose(owned[i]);\n        }\n        node.owned = null;\n    }\n    if (source1 !== null) {\n        cleanupSource(source1, node.source1slot);\n        node.source1 = null;\n    }\n    if (sources !== null) {\n        for (i = 0, len = sources.length; i < len; i++) {\n            cleanupSource(sources.pop(), sourceslots.pop());\n        }\n    }\n}\nfunction cleanupSource(source, slot) {\n    var nodes = source.nodes, nodeslots = source.nodeslots, last, lastslot;\n    if (slot === -1) {\n        source.node1 = null;\n    }\n    else {\n        last = nodes.pop();\n        lastslot = nodeslots.pop();\n        if (slot !== nodes.length) {\n            nodes[slot] = last;\n            nodeslots[slot] = lastslot;\n            if (lastslot === -1) {\n                last.source1slot = slot;\n            }\n            else {\n                last.sourceslots[lastslot] = slot;\n            }\n        }\n    }\n}\nfunction dispose(node) {\n    node.fn = null;\n    node.log = null;\n    cleanup(node, true);\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import { S } from 'surplus';\nexport default function data(signal, arg1, arg2) {\n    var event = arg1 || 'input', on = arg1 === undefined ? true : arg1, off = arg2 === undefined ? (on === true ? false : null) : arg2;\n    return function (node) {\n        if (node instanceof HTMLInputElement) {\n            var type = node.type.toUpperCase();\n            if (type === 'CHECKBOX') {\n                checkboxData(node, signal, on, off);\n            }\n            else if (type === 'RADIO') {\n                radioData(node, signal, on);\n            }\n            else {\n                valueData(node, signal, event);\n            }\n        }\n        else if (node instanceof HTMLSelectElement || node instanceof HTMLTextAreaElement) {\n            valueData(node, signal, event);\n        }\n        else if (node.isContentEditable) {\n            textContentData(node, signal, event);\n        }\n        else {\n            throw new Error(\"@data can only be applied to a form control element, \\n\"\n                + \"such as <input/>, <textarea/> or <select/>, or to an element with \"\n                + \"'contentEditable' set.  Element ``\" + node.nodeName + \"'' is \\n\"\n                + \"not such an element.  Perhaps you applied it to the wrong node?\");\n        }\n    };\n}\nfunction valueData(node, signal, event) {\n    S(function updateValue() {\n        node.value = toString(signal());\n    });\n    node.addEventListener(event, valueListener, false);\n    S.cleanup(function () { node.removeEventListener(event, valueListener); });\n    function valueListener() {\n        var cur = toString(S.sample(signal)), update = node.value;\n        if (cur !== update)\n            signal(update);\n        return true;\n    }\n}\nfunction checkboxData(node, signal, on, off) {\n    S(function updateCheckbox() {\n        node.checked = signal() === on;\n    });\n    node.addEventListener(\"change\", checkboxListener, false);\n    S.cleanup(function () { node.removeEventListener(\"change\", checkboxListener); });\n    function checkboxListener() {\n        signal(node.checked ? on : off);\n        return true;\n    }\n}\nfunction radioData(node, signal, on) {\n    S(function updateRadio() {\n        node.checked = (signal() === on);\n    });\n    node.addEventListener(\"change\", radioListener, false);\n    S.cleanup(function () { node.removeEventListener(\"change\", radioListener); });\n    function radioListener() {\n        if (node.checked)\n            signal(on);\n        return true;\n    }\n}\nfunction textContentData(node, signal, event) {\n    S(function updateTextContent() {\n        node.textContent = toString(signal());\n    });\n    node.addEventListener(event, textContentListener, false);\n    S.cleanup(function () { node.removeEventListener(event, textContentListener); });\n    function textContentListener() {\n        var cur = toString(S.sample(signal)), update = node.textContent;\n        if (cur !== update)\n            signal(update);\n        return true;\n    }\n}\nfunction toString(v) {\n    return v == null ? '' : v.toString();\n}\n","import {interpolateViridis} from \"d3-scale\";\nimport S, {DataSignal} from \"s-js\";\nimport * as Surplus from \"surplus\";\nimport data from \"surplus-mixin-data\";\n\nenum Layout {\n    PHYLLOTAXIS = 0,\n    GRID,\n    WAVE,\n    SPIRAL\n}\n\nconst LAYOUT_ORDER = [\n    Layout.PHYLLOTAXIS,\n    Layout.SPIRAL,\n    Layout.PHYLLOTAXIS,\n    Layout.GRID,\n    Layout.WAVE,\n];\n\nconst theta = Math.PI * (3 - Math.sqrt(5));\n\nexport type Point = { x: number; y: number; color: string };\n\nexport const view = S.root(() => {\n    let numPoints = S.data(1000);\n\n    return (\n        <div class=\"app-wrapper\">\n            <Visualization count={numPoints()}/>\n            <div class=\"controls\">\n                # Points\n                <input type=\"range\"\n                       min=\"10\"\n                       max=\"10000\"\n                       fn={data(numPoints)}/>\n                {numPoints()}\n            </div>\n        </div>);\n});\n(document.getElementById(\"root\") as HTMLElement).appendChild(view);\n\nfunction Visualization(props: { count: number }) {\n    const numSteps = 60 * 2;\n    const phyllotaxis = genPhyllotaxis(props.count);\n    const grid = genGrid(props.count);\n    const wave = genWave(props.count);\n    const spiral = genSpiral(props.count);\n\n    const points = makePoints();\n\n    let layout = 0;\n    let step = 0;\n\n    next();\n\n    return (\n        <svg class=\"demo\">\n            <g>\n                {points.map(pt =>\n                    <circle class=\"point\"\n                            r=\"4\"\n                            transform={`translate(${pt().x} ${pt().y})`}\n                            fill={`${pt().color}`}/>)\n                }\n            </g>\n        </svg>);\n\n    function next() {\n        step = ((step + 1) % numSteps);\n\n        if (step === 0) {\n            layout = (layout + 1) % LAYOUT_ORDER.length;\n        }\n\n        // Clamp the linear interpolation at 80% for a pause at each finished layout state\n        const pct = Math.min(1, step / (numSteps * 0.8));\n\n        const currentLayout = LAYOUT_ORDER[layout];\n        const nextLayout = LAYOUT_ORDER[(layout + 1) % LAYOUT_ORDER.length];\n\n        // Keep these redundant computations out of the loop\n        const pxProp = xForLayout(currentLayout);\n        const nxProp = xForLayout(nextLayout);\n        const pyProp = yForLayout(currentLayout);\n        const nyProp = yForLayout(nextLayout);\n\n        S.freeze(() => {\n            points.forEach(pt => {\n                const newPoint = S.sample(pt);\n                newPoint.x = lerp(newPoint, pct, pxProp, nxProp);\n                newPoint.y = lerp(newPoint, pct, pyProp, nyProp);\n                pt(newPoint);\n            });\n        });\n\n        requestAnimationFrame(() => { next() });\n    }\n\n    function makePoints(): Array<DataSignal<Point>> {\n        const newPoints = [];\n        for (let i = 0; i < props.count; i++) {\n            newPoints.push(S.data({\n                ...findAnchors(i),\n                x: 0,\n                y: 0,\n                color: interpolateViridis(i / props.count),\n            }));\n        }\n        return newPoints;\n\n        function findAnchors(i: number) {\n            const [gx, gy] = project(grid(i));\n            const [wx, wy] = project(wave(i));\n            const [sx, sy] = project(spiral(i));\n            const [px, py] = project(phyllotaxis(i));\n            return { gx, gy, wx, wy, sx, sy, px, py };\n        }\n    }\n}\n\nfunction project(vector: Array<number>) {\n    const wh = window.innerHeight / 2;\n    const ww = window.innerWidth / 2;\n\n    return translate([ww, wh], scale(Math.min(wh, ww), vector));\n\n    function scale(magnitude: number, vector: Array<number>) {\n        return vector.map(p => p * magnitude);\n    }\n\n    function translate(translation: Array<number>, vector: Array<number>) {\n        return vector.map((p, i) => p + translation[i]);\n    }\n}\n\nfunction lerp(obj: any,\n              percent: number,\n              startProp: string,\n              endProp: string) {\n    const px = obj[startProp];\n    return px + (obj[endProp] - px) * percent;\n}\n\nfunction genPhyllotaxis(n: number) {\n    return (i: number) => {\n        const r = Math.sqrt(i / n);\n        const th = i * theta;\n        return [\n            r * Math.cos(th),\n            r * Math.sin(th),\n        ];\n    };\n}\n\nfunction genGrid(n: number) {\n    const rowLength = Math.round(Math.sqrt(n));\n    return (i: number) => [\n        -0.8 + 1.6 / rowLength * (i % rowLength),\n        -0.8 + 1.6 / rowLength * Math.floor(i / rowLength),\n    ];\n}\n\nfunction genWave(n: number) {\n    const xScale = 2 / (n - 1);\n    return (i: number) => {\n        const x = -1 + i * xScale;\n        return [\n            x,\n            Math.sin(x * Math.PI * 3) * 0.3,\n        ];\n    };\n}\n\nfunction genSpiral(n: number) {\n    return (i: number) => {\n        const t = Math.sqrt(i / (n - 1));\n        return [\n            t * Math.cos(t * Math.PI * 10),\n            t * Math.sin(t * Math.PI * 10),\n        ];\n    };\n}\n\nfunction xForLayout(layout: Layout) {\n    switch (layout) {\n        case Layout.PHYLLOTAXIS:\n            return 'px';\n        case Layout.GRID:\n            return 'gx';\n        case Layout.WAVE:\n            return 'wx';\n        case Layout.SPIRAL:\n            return 'sx';\n    }\n}\n\nfunction yForLayout(layout: Layout) {\n    switch (layout) {\n        case Layout.PHYLLOTAXIS:\n            return 'py';\n        case Layout.GRID:\n            return 'gy';\n        case Layout.WAVE:\n            return 'wy';\n        case Layout.SPIRAL:\n            return 'sy';\n    }\n}\n"],"sourceRoot":""}